Auto generated patch. Do not edit or delete it, even if empty.
diff -ruN --strip-trailing-cr a/clang/lib/AST/Interp/Source.h b/clang/lib/AST/Interp/Source.h
--- a/clang/lib/AST/Interp/Source.h
+++ b/clang/lib/AST/Interp/Source.h
@@ -14,17 +14,11 @@
 #define LLVM_CLANG_AST_INTERP_SOURCE_H
 
 #include "PrimType.h"
-#include "llvm/ADT/PointerUnion.h"
+#include "clang/AST/Decl.h"
+#include "clang/AST/Stmt.h"
 #include "llvm/Support/Endian.h"
 
 namespace clang {
-
-class Decl;
-class Stmt;
-class SourceLocation;
-class Expr;
-class SourceRange;
-
 namespace interp {
 class Function;
 
diff -ruN --strip-trailing-cr a/lldb/bindings/python/python-wrapper.swig b/lldb/bindings/python/python-wrapper.swig
--- a/lldb/bindings/python/python-wrapper.swig
+++ b/lldb/bindings/python/python-wrapper.swig
@@ -1126,11 +1126,11 @@
 
   PyErr_Cleaner py_err_cleaner(true);
   PythonObject module_spec_arg = SWIGBridge::ToSWIGWrapper(
-      std::move(std::make_unique<SBModuleSpec>(module_spec_sb)));
+      std::make_unique<SBModuleSpec>(module_spec_sb));
   PythonObject module_file_spec_arg = SWIGBridge::ToSWIGWrapper(
-      std::move(std::make_unique<SBFileSpec>(module_file_spec_sb)));
+      std::make_unique<SBFileSpec>(module_file_spec_sb));
   PythonObject symbol_file_spec_arg = SWIGBridge::ToSWIGWrapper(
-      std::move(std::make_unique<SBFileSpec>(symbol_file_spec_sb)));
+      std::make_unique<SBFileSpec>(symbol_file_spec_sb));
 
   PythonCallable callable =
       Retain<PythonCallable>(reinterpret_cast<PyObject *>(callback_baton));
